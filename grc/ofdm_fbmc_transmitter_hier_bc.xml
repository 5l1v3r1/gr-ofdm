<?xml version="1.0"?>
<block>
  <name>Transmitter</name>
  <key>ofdm_fbmc_transmitter_hier_bc</key>
  <category>FBMC</category>
  <import>import ofdm</import>
  <make>ofdm.fbmc_transmitter_hier_bc($M, $K, $qam_size, $syms_per_frame, $theta_sel, $exclude_preamble, $sel_preamble)</make>
  <!-- Make one 'param' node for every Parameter you want settable from the GUI.
       Sub-nodes:
       * name
       * key (makes the value accessible as $keyname, e.g. in the make node)
       * type -->
  <param>
    <name>M</name>
    <key>M</key>
    <value>M</value>
    <type>int</type>
  </param>
  <param>
    <name>K</name>
    <key>K</key>
    <value>K</value>
    <type>int</type>
  </param>
  <param>
    <name>qam_size</name>
    <key>qam_size</key>
    <value>qam_size</value>
    <type>int</type>
  </param>
  <param>
    <name>syms_per_frame</name>
    <key>syms_per_frame</key>
    <value>syms_per_frame</value>
    <type>int</type>
  </param>
  <param>
    <name>theta_sel</name>
    <key>theta_sel</key>
    <value>theta_sel</value>
    <type>int</type>
  </param>
  <param>
    <name>preamble</name>
    <key>sel_preamble</key>
    <value>[0]*M+[1, -1j, -1, 1j]*(M/4)+[0]*M</value>
    <type>raw</type>
  </param>
  <param>
    <name>exclude_preamble</name>
    <key>exclude_preamble</key>
    <value>exclude_preamble</value>
    <type>int</type>
  </param>


  <!-- Make one 'sink' node per input. Sub-nodes:
       * name (an identifier for the GUI)
       * type
       * vlen
       * optional (set to 1 for optional inputs) -->
  <sink>
    <name>in</name>
    <type>byte</type>
    <vlen>1</vlen>
  </sink>

  <!-- Make one 'source' node per output. Sub-nodes:
       * name (an identifier for the GUI)
       * type
       * vlen
       * optional (set to 1 for optional inputs) -->
  <source>
    <name>out</name>
    <type>complex</type>
    <vlen>complex</vlen>
  </source>
</block>
